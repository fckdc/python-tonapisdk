# coding: utf-8

"""
    REST api to TON blockchain explorer

    Provide access to indexed TON blockchain  # noqa: E501

    The version of the OpenAPI document: 2.0.0
    Contact: support@tonkeeper.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import fdtapi
from fdtapi.models.account_staking import AccountStaking  # noqa: E501
from fdtapi.rest import ApiException

class TestAccountStaking(unittest.TestCase):
    """AccountStaking unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test AccountStaking
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AccountStaking`
        """
        model = fdtapi.models.account_staking.AccountStaking()  # noqa: E501
        if include_optional :
            return AccountStaking(
                pools = [
                    fdtapi.models.account_staking_info.AccountStakingInfo(
                        pool = 'EQBI-wGVp_x0VFEjd7m9cEUD3tJ_bnxMSp0Tb9qz757ATEAM', 
                        amount = 10050000000000, 
                        pending_deposit = 500000000000, 
                        pending_withdraw = 500000000000, 
                        ready_withdraw = 500000000000, )
                    ]
            )
        else :
            return AccountStaking(
                pools = [
                    fdtapi.models.account_staking_info.AccountStakingInfo(
                        pool = 'EQBI-wGVp_x0VFEjd7m9cEUD3tJ_bnxMSp0Tb9qz757ATEAM', 
                        amount = 10050000000000, 
                        pending_deposit = 500000000000, 
                        pending_withdraw = 500000000000, 
                        ready_withdraw = 500000000000, )
                    ],
        )
        """

    def testAccountStaking(self):
        """Test AccountStaking"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
