# coding: utf-8

"""
    REST api to TON blockchain explorer

    Provide access to indexed TON blockchain  # noqa: E501

    The version of the OpenAPI document: 2.0.0
    Contact: support@tonkeeper.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import fdtapi
from fdtapi.models.jettons import Jettons  # noqa: E501
from fdtapi.rest import ApiException

class TestJettons(unittest.TestCase):
    """Jettons unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Jettons
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Jettons`
        """
        model = fdtapi.models.jettons.Jettons()  # noqa: E501
        if include_optional :
            return Jettons(
                jettons = [
                    fdtapi.models.jetton_info.JettonInfo(
                        mintable = True, 
                        total_supply = '311500000000000', 
                        metadata = fdtapi.models.jetton_metadata.JettonMetadata(
                            address = '0:0BB5A9F69043EEBDDA5AD2E946EB953242BD8F603FE795D90698CEEC6BFC60A0', 
                            name = 'Wrapped TON', 
                            symbol = 'WTON', 
                            decimals = '9', 
                            image = 'https://cache.tonapi.io/images/jetton.jpg', 
                            description = 'Wrapped Toncoin', 
                            social = [
                                '["https://t.me/durov_coin","https://twitter.com/durov_coin"]'
                                ], 
                            websites = [
                                '["https://durov.coin","ton://durov-coin.ton"]'
                                ], 
                            catalogs = [
                                '["https://coinmarketcap.com/currencies/drv/","https://www.coingecko.com/en/coins/durov"]'
                                ], ), 
                        verification = 'whitelist', 
                        holders_count = 2000, )
                    ]
            )
        else :
            return Jettons(
                jettons = [
                    fdtapi.models.jetton_info.JettonInfo(
                        mintable = True, 
                        total_supply = '311500000000000', 
                        metadata = fdtapi.models.jetton_metadata.JettonMetadata(
                            address = '0:0BB5A9F69043EEBDDA5AD2E946EB953242BD8F603FE795D90698CEEC6BFC60A0', 
                            name = 'Wrapped TON', 
                            symbol = 'WTON', 
                            decimals = '9', 
                            image = 'https://cache.tonapi.io/images/jetton.jpg', 
                            description = 'Wrapped Toncoin', 
                            social = [
                                '["https://t.me/durov_coin","https://twitter.com/durov_coin"]'
                                ], 
                            websites = [
                                '["https://durov.coin","ton://durov-coin.ton"]'
                                ], 
                            catalogs = [
                                '["https://coinmarketcap.com/currencies/drv/","https://www.coingecko.com/en/coins/durov"]'
                                ], ), 
                        verification = 'whitelist', 
                        holders_count = 2000, )
                    ],
        )
        """

    def testJettons(self):
        """Test Jettons"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
