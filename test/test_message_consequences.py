# coding: utf-8

"""
    REST api to TON blockchain explorer

    Provide access to indexed TON blockchain  # noqa: E501

    The version of the OpenAPI document: 2.0.0
    Contact: support@tonkeeper.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import fdtapi
from fdtapi.models.message_consequences import MessageConsequences  # noqa: E501
from fdtapi.rest import ApiException

class TestMessageConsequences(unittest.TestCase):
    """MessageConsequences unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test MessageConsequences
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MessageConsequences`
        """
        model = fdtapi.models.message_consequences.MessageConsequences()  # noqa: E501
        if include_optional :
            return MessageConsequences(
                trace = fdtapi.models.trace.Trace(
                    transaction = fdtapi.models.transaction.Transaction(
                        hash = '55e8809519cd3c49098c9ee45afdafcea7a894a74d0f628d94a115a50e045122', 
                        lt = 25713146000001, 
                        account = fdtapi.models.account_address.AccountAddress(
                            address = '0:10C1073837B93FDAAD594284CE8B8EFF7B9CF25427440EB2FC682762E1471365', 
                            name = 'Ton foundation', 
                            is_scam = True, 
                            icon = 'https://ton.org/logo.png', ), 
                        success = True, 
                        utime = 1645544908, 
                        orig_status = 'active', 
                        end_status = 'active', 
                        total_fees = 25713146000001, 
                        transaction_type = 'TransOrd', 
                        state_update_old = '55e8809519cd3c49098c9ee45afdafcea7a894a74d0f628d94a115a50e045122', 
                        state_update_new = '55e8809519cd3c49098c9ee45afdafcea7a894a74d0f628d94a115a50e045122', 
                        in_msg = fdtapi.models.message.Message(
                            created_lt = 25713146000001, 
                            ihr_disabled = True, 
                            bounce = True, 
                            bounced = True, 
                            value = 60000000, 
                            fwd_fee = 5681002, 
                            ihr_fee = 5681002, 
                            destination = fdtapi.models.account_address.AccountAddress(
                                address = '0:10C1073837B93FDAAD594284CE8B8EFF7B9CF25427440EB2FC682762E1471365', 
                                name = 'Ton foundation', 
                                is_scam = True, 
                                icon = 'https://ton.org/logo.png', ), 
                            source = , 
                            import_fee = 5681002, 
                            created_at = 5681002, 
                            op_code = '0xdeadbeaf', 
                            init = fdtapi.models.state_init.StateInit(
                                boc = 'te6ccgEBBgEARAABFP8A9KQT9LzyyAsBAgEgAgMCAUgEBQAE8jAAONBsIdMfMO1E0NM/MAHAAZekyMs/ye1UkzDyBuIAEaE0MdqJoaZ+YQ==', ), 
                            raw_body = 'B5EE9C7201010101001100001D00048656C6C6F2C20776F726C64218', 
                            decoded_op_name = 'nft_transfer', 
                            decoded_body = null, ), 
                        out_msgs = [
                            fdtapi.models.message.Message(
                                created_lt = 25713146000001, 
                                ihr_disabled = True, 
                                bounce = True, 
                                bounced = True, 
                                value = 60000000, 
                                fwd_fee = 5681002, 
                                ihr_fee = 5681002, 
                                import_fee = 5681002, 
                                created_at = 5681002, 
                                op_code = '0xdeadbeaf', 
                                raw_body = 'B5EE9C7201010101001100001D00048656C6C6F2C20776F726C64218', 
                                decoded_op_name = 'nft_transfer', 
                                decoded_body = null, )
                            ], 
                        block = '(-1,4234234,8000000000000000)', 
                        prev_trans_hash = '55e8809519cd3c49098c9ee45afdafcea7a894a74d0f628d94a115a50e045122', 
                        prev_trans_lt = 25713146000001, 
                        compute_phase = fdtapi.models.compute_phase.ComputePhase(
                            skipped = True, 
                            skip_reason = 'cskip_no_state', 
                            success = True, 
                            gas_fees = 1000, 
                            gas_used = 10000, 
                            vm_steps = 5, 
                            exit_code = 0, ), 
                        storage_phase = fdtapi.models.storage_phase.StoragePhase(
                            fees_collected = 25713146000001, 
                            fees_due = 25713146000001, 
                            status_change = 'acst_unchanged', ), 
                        credit_phase = fdtapi.models.credit_phase.CreditPhase(
                            fees_collected = 100, 
                            credit = 1000, ), 
                        action_phase = fdtapi.models.action_phase.ActionPhase(
                            success = True, 
                            total_actions = 5, 
                            skipped_actions = 5, 
                            fwd_fees = 1000, 
                            total_fees = 1000, ), 
                        bounce_phase = 'cskip_no_state', 
                        aborted = True, 
                        destroyed = True, ), 
                    interfaces = ["wallet","tep62_item"], 
                    children = [
                        fdtapi.models.trace.Trace(
                            transaction = fdtapi.models.transaction.Transaction(
                                hash = '55e8809519cd3c49098c9ee45afdafcea7a894a74d0f628d94a115a50e045122', 
                                lt = 25713146000001, 
                                account = , 
                                success = True, 
                                utime = 1645544908, 
                                orig_status = 'active', 
                                end_status = 'active', 
                                total_fees = 25713146000001, 
                                transaction_type = 'TransOrd', 
                                state_update_old = '55e8809519cd3c49098c9ee45afdafcea7a894a74d0f628d94a115a50e045122', 
                                state_update_new = '55e8809519cd3c49098c9ee45afdafcea7a894a74d0f628d94a115a50e045122', 
                                out_msgs = [
                                    
                                    ], 
                                block = '(-1,4234234,8000000000000000)', 
                                prev_trans_hash = '55e8809519cd3c49098c9ee45afdafcea7a894a74d0f628d94a115a50e045122', 
                                prev_trans_lt = 25713146000001, 
                                aborted = True, 
                                destroyed = True, ), 
                            interfaces = ["wallet","tep62_item"], )
                        ], ), 
                risk = fdtapi.models.risk.Risk(
                    transfer_all_remaining_balance = True, 
                    ton = 500, 
                    jettons = [
                        fdtapi.models.jetton_quantity.JettonQuantity(
                            quantity = '597968399', 
                            wallet_address = fdtapi.models.account_address.AccountAddress(
                                address = '0:10C1073837B93FDAAD594284CE8B8EFF7B9CF25427440EB2FC682762E1471365', 
                                name = 'Ton foundation', 
                                is_scam = True, 
                                icon = 'https://ton.org/logo.png', ), 
                            jetton = fdtapi.models.jetton_preview.JettonPreview(
                                address = '0:0BB5A9F69043EEBDDA5AD2E946EB953242BD8F603FE795D90698CEEC6BFC60A0', 
                                name = 'Wrapped TON', 
                                symbol = 'WTON', 
                                decimals = 9, 
                                image = 'https://cache.tonapi.io/images/jetton.jpg', 
                                verification = 'whitelist', ), )
                        ], 
                    nfts = [
                        fdtapi.models.nft_item.NftItem(
                            address = '0:E93E7D444180608B8520C00DC664383A387356FB6E16FDDF99DBE5E1415A574B', 
                            index = 58, 
                            owner = fdtapi.models.account_address.AccountAddress(
                                address = '0:10C1073837B93FDAAD594284CE8B8EFF7B9CF25427440EB2FC682762E1471365', 
                                name = 'Ton foundation', 
                                is_scam = True, 
                                icon = 'https://ton.org/logo.png', ), 
                            collection = fdtapi.models.nft_item_collection.NftItem_collection(
                                address = '0:E93E7D444180608B8520C00DC664383A387356FB6E16FDDF99DBE5E1415A574B', 
                                name = 'TON Diamonds', 
                                description = 'Best collection in TON network', ), 
                            verified = True, 
                            metadata = {}, 
                            sale = fdtapi.models.sale.Sale(
                                address = '0:10C1073837B93FDAAD594284CE8B8EFF7B9CF25427440EB2FC682762E1471365', 
                                market = , 
                                price = fdtapi.models.price.Price(
                                    value = '123000000000', 
                                    token_name = 'TON', ), ), 
                            previews = [
                                fdtapi.models.image_preview.ImagePreview(
                                    resolution = '100x100', 
                                    url = 'https://site.com/pic1.jpg', )
                                ], 
                            dns = 'crypto.ton', 
                            approved_by = [
                                'getgems'
                                ], )
                        ], ), 
                event = fdtapi.models.account_event.AccountEvent(
                    event_id = 'e8b0e3fee4a26bd2317ac1f9952fcdc87dc08fdb617656b5202416323337372e', 
                    account = fdtapi.models.account_address.AccountAddress(
                        address = '0:10C1073837B93FDAAD594284CE8B8EFF7B9CF25427440EB2FC682762E1471365', 
                        name = 'Ton foundation', 
                        is_scam = True, 
                        icon = 'https://ton.org/logo.png', ), 
                    timestamp = 1234567890, 
                    actions = [
                        fdtapi.models.action.Action(
                            type = 'TonTransfer', 
                            status = 'ok', 
                            ton_transfer = fdtapi.models.ton_transfer_action.TonTransferAction(
                                sender = fdtapi.models.account_address.AccountAddress(
                                    address = '0:10C1073837B93FDAAD594284CE8B8EFF7B9CF25427440EB2FC682762E1471365', 
                                    name = 'Ton foundation', 
                                    is_scam = True, 
                                    icon = 'https://ton.org/logo.png', ), 
                                recipient = , 
                                amount = 123456789, 
                                comment = 'Hi! This is your salary. 
From accounting with love.', 
                                encrypted_comment = fdtapi.models.encrypted_comment.EncryptedComment(
                                    encryption_type = 'simple', 
                                    cipher_text = 'A6A0BD6608672B...CE3AF8DB', ), 
                                refund = fdtapi.models.refund.Refund(
                                    type = 'DNS.ton', 
                                    origin = '0:da6b1b6663a0e4d18cc8574ccd9db5296e367dd9324706f3bbd9eb1cd2caf0bf', ), ), 
                            contract_deploy = fdtapi.models.contract_deploy_action.ContractDeployAction(
                                address = '0:da6b1b6663a0e4d18cc8574ccd9db5296e367dd9324706f3bbd9eb1cd2caf0bf', 
                                interfaces = ["nft_item","nft_royalty"], ), 
                            jetton_transfer = fdtapi.models.jetton_transfer_action.JettonTransferAction(
                                senders_wallet = '0:E93E7D444180608B8520C00DC664383A387356FB6E16FDDF99DBE5E1415A574B', 
                                recipients_wallet = '0:E93E7D444180608B8520C00DC664383A387356FB6E16FDDF99DBE5E1415A574B', 
                                amount = '1000000000', 
                                comment = 'Hi! This is your salary. 
From accounting with love.', 
                                jetton = fdtapi.models.jetton_preview.JettonPreview(
                                    address = '0:0BB5A9F69043EEBDDA5AD2E946EB953242BD8F603FE795D90698CEEC6BFC60A0', 
                                    name = 'Wrapped TON', 
                                    symbol = 'WTON', 
                                    decimals = 9, 
                                    image = 'https://cache.tonapi.io/images/jetton.jpg', 
                                    verification = 'whitelist', ), ), 
                            nft_item_transfer = fdtapi.models.nft_item_transfer_action.NftItemTransferAction(
                                nft = '', 
                                comment = 'Hi! This is your salary. 
From accounting with love.', 
                                payload = '0234de3e21d21b3ee21f3', ), 
                            subscribe = fdtapi.models.subscription_action.SubscriptionAction(
                                subscriber = , 
                                subscription = '0:da6b1b6663a0e4d18cc8574ccd9db5296e367dd9324706f3bbd9eb1cd2caf0bf', 
                                beneficiary = , 
                                amount = 1000000000, 
                                initial = False, ), 
                            un_subscribe = fdtapi.models.un_subscription_action.UnSubscriptionAction(
                                subscriber = , 
                                subscription = '0:da6b1b6663a0e4d18cc8574ccd9db5296e367dd9324706f3bbd9eb1cd2caf0bf', 
                                beneficiary = , ), 
                            auction_bid = fdtapi.models.auction_bid_action.AuctionBidAction(
                                auction_type = 'DNS.ton', 
                                amount = fdtapi.models.price.Price(
                                    value = '123000000000', 
                                    token_name = 'TON', ), 
                                nft = fdtapi.models.nft_item.NftItem(
                                    address = '0:E93E7D444180608B8520C00DC664383A387356FB6E16FDDF99DBE5E1415A574B', 
                                    index = 58, 
                                    owner = , 
                                    collection = fdtapi.models.nft_item_collection.NftItem_collection(
                                        address = '0:E93E7D444180608B8520C00DC664383A387356FB6E16FDDF99DBE5E1415A574B', 
                                        name = 'TON Diamonds', 
                                        description = 'Best collection in TON network', ), 
                                    verified = True, 
                                    metadata = {}, 
                                    sale = fdtapi.models.sale.Sale(
                                        address = '0:10C1073837B93FDAAD594284CE8B8EFF7B9CF25427440EB2FC682762E1471365', 
                                        market = , 
                                        price = fdtapi.models.price.Price(
                                            value = '123000000000', 
                                            token_name = 'TON', ), ), 
                                    previews = [
                                        fdtapi.models.image_preview.ImagePreview(
                                            resolution = '100x100', 
                                            url = 'https://site.com/pic1.jpg', )
                                        ], 
                                    dns = 'crypto.ton', 
                                    approved_by = [
                                        'getgems'
                                        ], ), 
                                bidder = , 
                                auction = , ), 
                            nft_purchase = fdtapi.models.nft_purchase_action.NftPurchaseAction(
                                auction_type = 'DNS.tg', 
                                amount = , 
                                nft = fdtapi.models.nft_item.NftItem(
                                    address = '0:E93E7D444180608B8520C00DC664383A387356FB6E16FDDF99DBE5E1415A574B', 
                                    index = 58, 
                                    verified = True, 
                                    metadata = {}, 
                                    dns = 'crypto.ton', 
                                    approved_by = [
                                        'getgems'
                                        ], ), 
                                seller = , 
                                buyer = , ), 
                            deposit_stake = fdtapi.models.deposit_stake_action.DepositStakeAction(
                                amount = 1660050553, 
                                staker = , ), 
                            recover_stake = fdtapi.models.recover_stake_action.RecoverStakeAction(
                                amount = 1660050553, 
                                staker = , ), 
                            jetton_swap = fdtapi.models.jetton_swap_action.JettonSwapAction(
                                dex = 'stonfi', 
                                amount_in = '1660050553', 
                                amount_out = '1660050553', 
                                user_wallet = , 
                                router = , 
                                jetton_wallet_in = '0:dea8f638b789172ce36d10a20318125e52c649aa84893cd77858224fe2b9b0ee', 
                                jetton_master_in = fdtapi.models.jetton_preview.JettonPreview(
                                    address = '0:0BB5A9F69043EEBDDA5AD2E946EB953242BD8F603FE795D90698CEEC6BFC60A0', 
                                    name = 'Wrapped TON', 
                                    symbol = 'WTON', 
                                    decimals = 9, 
                                    image = 'https://cache.tonapi.io/images/jetton.jpg', 
                                    verification = 'whitelist', ), 
                                jetton_wallet_out = '0:dea8f638b789172ce36d10a20318125e52c649aa84893cd77858224fe2b9b0ee', 
                                jetton_master_out = , ), 
                            smart_contract_exec = fdtapi.models.smart_contract_action.SmartContractAction(
                                executor = , 
                                contract = , 
                                ton_attached = 123456789, 
                                operation = 'NftTransfer or 0x35d95a12', 
                                payload = '', ), 
                            simple_preview = fdtapi.models.action_simple_preview.ActionSimplePreview(
                                name = 'Ton Transfer', 
                                description = 'Transferring 5 Ton', 
                                action_image = '', 
                                value = '5 Ton', 
                                value_image = '', 
                                accounts = [
                                    
                                    ], ), )
                        ], 
                    is_scam = False, 
                    lt = 25713146000001, 
                    in_progress = False, 
                    extra = 3, )
            )
        else :
            return MessageConsequences(
                trace = fdtapi.models.trace.Trace(
                    transaction = fdtapi.models.transaction.Transaction(
                        hash = '55e8809519cd3c49098c9ee45afdafcea7a894a74d0f628d94a115a50e045122', 
                        lt = 25713146000001, 
                        account = fdtapi.models.account_address.AccountAddress(
                            address = '0:10C1073837B93FDAAD594284CE8B8EFF7B9CF25427440EB2FC682762E1471365', 
                            name = 'Ton foundation', 
                            is_scam = True, 
                            icon = 'https://ton.org/logo.png', ), 
                        success = True, 
                        utime = 1645544908, 
                        orig_status = 'active', 
                        end_status = 'active', 
                        total_fees = 25713146000001, 
                        transaction_type = 'TransOrd', 
                        state_update_old = '55e8809519cd3c49098c9ee45afdafcea7a894a74d0f628d94a115a50e045122', 
                        state_update_new = '55e8809519cd3c49098c9ee45afdafcea7a894a74d0f628d94a115a50e045122', 
                        in_msg = fdtapi.models.message.Message(
                            created_lt = 25713146000001, 
                            ihr_disabled = True, 
                            bounce = True, 
                            bounced = True, 
                            value = 60000000, 
                            fwd_fee = 5681002, 
                            ihr_fee = 5681002, 
                            destination = fdtapi.models.account_address.AccountAddress(
                                address = '0:10C1073837B93FDAAD594284CE8B8EFF7B9CF25427440EB2FC682762E1471365', 
                                name = 'Ton foundation', 
                                is_scam = True, 
                                icon = 'https://ton.org/logo.png', ), 
                            source = , 
                            import_fee = 5681002, 
                            created_at = 5681002, 
                            op_code = '0xdeadbeaf', 
                            init = fdtapi.models.state_init.StateInit(
                                boc = 'te6ccgEBBgEARAABFP8A9KQT9LzyyAsBAgEgAgMCAUgEBQAE8jAAONBsIdMfMO1E0NM/MAHAAZekyMs/ye1UkzDyBuIAEaE0MdqJoaZ+YQ==', ), 
                            raw_body = 'B5EE9C7201010101001100001D00048656C6C6F2C20776F726C64218', 
                            decoded_op_name = 'nft_transfer', 
                            decoded_body = null, ), 
                        out_msgs = [
                            fdtapi.models.message.Message(
                                created_lt = 25713146000001, 
                                ihr_disabled = True, 
                                bounce = True, 
                                bounced = True, 
                                value = 60000000, 
                                fwd_fee = 5681002, 
                                ihr_fee = 5681002, 
                                import_fee = 5681002, 
                                created_at = 5681002, 
                                op_code = '0xdeadbeaf', 
                                raw_body = 'B5EE9C7201010101001100001D00048656C6C6F2C20776F726C64218', 
                                decoded_op_name = 'nft_transfer', 
                                decoded_body = null, )
                            ], 
                        block = '(-1,4234234,8000000000000000)', 
                        prev_trans_hash = '55e8809519cd3c49098c9ee45afdafcea7a894a74d0f628d94a115a50e045122', 
                        prev_trans_lt = 25713146000001, 
                        compute_phase = fdtapi.models.compute_phase.ComputePhase(
                            skipped = True, 
                            skip_reason = 'cskip_no_state', 
                            success = True, 
                            gas_fees = 1000, 
                            gas_used = 10000, 
                            vm_steps = 5, 
                            exit_code = 0, ), 
                        storage_phase = fdtapi.models.storage_phase.StoragePhase(
                            fees_collected = 25713146000001, 
                            fees_due = 25713146000001, 
                            status_change = 'acst_unchanged', ), 
                        credit_phase = fdtapi.models.credit_phase.CreditPhase(
                            fees_collected = 100, 
                            credit = 1000, ), 
                        action_phase = fdtapi.models.action_phase.ActionPhase(
                            success = True, 
                            total_actions = 5, 
                            skipped_actions = 5, 
                            fwd_fees = 1000, 
                            total_fees = 1000, ), 
                        bounce_phase = 'cskip_no_state', 
                        aborted = True, 
                        destroyed = True, ), 
                    interfaces = ["wallet","tep62_item"], 
                    children = [
                        fdtapi.models.trace.Trace(
                            transaction = fdtapi.models.transaction.Transaction(
                                hash = '55e8809519cd3c49098c9ee45afdafcea7a894a74d0f628d94a115a50e045122', 
                                lt = 25713146000001, 
                                account = , 
                                success = True, 
                                utime = 1645544908, 
                                orig_status = 'active', 
                                end_status = 'active', 
                                total_fees = 25713146000001, 
                                transaction_type = 'TransOrd', 
                                state_update_old = '55e8809519cd3c49098c9ee45afdafcea7a894a74d0f628d94a115a50e045122', 
                                state_update_new = '55e8809519cd3c49098c9ee45afdafcea7a894a74d0f628d94a115a50e045122', 
                                out_msgs = [
                                    
                                    ], 
                                block = '(-1,4234234,8000000000000000)', 
                                prev_trans_hash = '55e8809519cd3c49098c9ee45afdafcea7a894a74d0f628d94a115a50e045122', 
                                prev_trans_lt = 25713146000001, 
                                aborted = True, 
                                destroyed = True, ), 
                            interfaces = ["wallet","tep62_item"], )
                        ], ),
                risk = fdtapi.models.risk.Risk(
                    transfer_all_remaining_balance = True, 
                    ton = 500, 
                    jettons = [
                        fdtapi.models.jetton_quantity.JettonQuantity(
                            quantity = '597968399', 
                            wallet_address = fdtapi.models.account_address.AccountAddress(
                                address = '0:10C1073837B93FDAAD594284CE8B8EFF7B9CF25427440EB2FC682762E1471365', 
                                name = 'Ton foundation', 
                                is_scam = True, 
                                icon = 'https://ton.org/logo.png', ), 
                            jetton = fdtapi.models.jetton_preview.JettonPreview(
                                address = '0:0BB5A9F69043EEBDDA5AD2E946EB953242BD8F603FE795D90698CEEC6BFC60A0', 
                                name = 'Wrapped TON', 
                                symbol = 'WTON', 
                                decimals = 9, 
                                image = 'https://cache.tonapi.io/images/jetton.jpg', 
                                verification = 'whitelist', ), )
                        ], 
                    nfts = [
                        fdtapi.models.nft_item.NftItem(
                            address = '0:E93E7D444180608B8520C00DC664383A387356FB6E16FDDF99DBE5E1415A574B', 
                            index = 58, 
                            owner = fdtapi.models.account_address.AccountAddress(
                                address = '0:10C1073837B93FDAAD594284CE8B8EFF7B9CF25427440EB2FC682762E1471365', 
                                name = 'Ton foundation', 
                                is_scam = True, 
                                icon = 'https://ton.org/logo.png', ), 
                            collection = fdtapi.models.nft_item_collection.NftItem_collection(
                                address = '0:E93E7D444180608B8520C00DC664383A387356FB6E16FDDF99DBE5E1415A574B', 
                                name = 'TON Diamonds', 
                                description = 'Best collection in TON network', ), 
                            verified = True, 
                            metadata = {}, 
                            sale = fdtapi.models.sale.Sale(
                                address = '0:10C1073837B93FDAAD594284CE8B8EFF7B9CF25427440EB2FC682762E1471365', 
                                market = , 
                                price = fdtapi.models.price.Price(
                                    value = '123000000000', 
                                    token_name = 'TON', ), ), 
                            previews = [
                                fdtapi.models.image_preview.ImagePreview(
                                    resolution = '100x100', 
                                    url = 'https://site.com/pic1.jpg', )
                                ], 
                            dns = 'crypto.ton', 
                            approved_by = [
                                'getgems'
                                ], )
                        ], ),
                event = fdtapi.models.account_event.AccountEvent(
                    event_id = 'e8b0e3fee4a26bd2317ac1f9952fcdc87dc08fdb617656b5202416323337372e', 
                    account = fdtapi.models.account_address.AccountAddress(
                        address = '0:10C1073837B93FDAAD594284CE8B8EFF7B9CF25427440EB2FC682762E1471365', 
                        name = 'Ton foundation', 
                        is_scam = True, 
                        icon = 'https://ton.org/logo.png', ), 
                    timestamp = 1234567890, 
                    actions = [
                        fdtapi.models.action.Action(
                            type = 'TonTransfer', 
                            status = 'ok', 
                            ton_transfer = fdtapi.models.ton_transfer_action.TonTransferAction(
                                sender = fdtapi.models.account_address.AccountAddress(
                                    address = '0:10C1073837B93FDAAD594284CE8B8EFF7B9CF25427440EB2FC682762E1471365', 
                                    name = 'Ton foundation', 
                                    is_scam = True, 
                                    icon = 'https://ton.org/logo.png', ), 
                                recipient = , 
                                amount = 123456789, 
                                comment = 'Hi! This is your salary. 
From accounting with love.', 
                                encrypted_comment = fdtapi.models.encrypted_comment.EncryptedComment(
                                    encryption_type = 'simple', 
                                    cipher_text = 'A6A0BD6608672B...CE3AF8DB', ), 
                                refund = fdtapi.models.refund.Refund(
                                    type = 'DNS.ton', 
                                    origin = '0:da6b1b6663a0e4d18cc8574ccd9db5296e367dd9324706f3bbd9eb1cd2caf0bf', ), ), 
                            contract_deploy = fdtapi.models.contract_deploy_action.ContractDeployAction(
                                address = '0:da6b1b6663a0e4d18cc8574ccd9db5296e367dd9324706f3bbd9eb1cd2caf0bf', 
                                interfaces = ["nft_item","nft_royalty"], ), 
                            jetton_transfer = fdtapi.models.jetton_transfer_action.JettonTransferAction(
                                senders_wallet = '0:E93E7D444180608B8520C00DC664383A387356FB6E16FDDF99DBE5E1415A574B', 
                                recipients_wallet = '0:E93E7D444180608B8520C00DC664383A387356FB6E16FDDF99DBE5E1415A574B', 
                                amount = '1000000000', 
                                comment = 'Hi! This is your salary. 
From accounting with love.', 
                                jetton = fdtapi.models.jetton_preview.JettonPreview(
                                    address = '0:0BB5A9F69043EEBDDA5AD2E946EB953242BD8F603FE795D90698CEEC6BFC60A0', 
                                    name = 'Wrapped TON', 
                                    symbol = 'WTON', 
                                    decimals = 9, 
                                    image = 'https://cache.tonapi.io/images/jetton.jpg', 
                                    verification = 'whitelist', ), ), 
                            nft_item_transfer = fdtapi.models.nft_item_transfer_action.NftItemTransferAction(
                                nft = '', 
                                comment = 'Hi! This is your salary. 
From accounting with love.', 
                                payload = '0234de3e21d21b3ee21f3', ), 
                            subscribe = fdtapi.models.subscription_action.SubscriptionAction(
                                subscriber = , 
                                subscription = '0:da6b1b6663a0e4d18cc8574ccd9db5296e367dd9324706f3bbd9eb1cd2caf0bf', 
                                beneficiary = , 
                                amount = 1000000000, 
                                initial = False, ), 
                            un_subscribe = fdtapi.models.un_subscription_action.UnSubscriptionAction(
                                subscriber = , 
                                subscription = '0:da6b1b6663a0e4d18cc8574ccd9db5296e367dd9324706f3bbd9eb1cd2caf0bf', 
                                beneficiary = , ), 
                            auction_bid = fdtapi.models.auction_bid_action.AuctionBidAction(
                                auction_type = 'DNS.ton', 
                                amount = fdtapi.models.price.Price(
                                    value = '123000000000', 
                                    token_name = 'TON', ), 
                                nft = fdtapi.models.nft_item.NftItem(
                                    address = '0:E93E7D444180608B8520C00DC664383A387356FB6E16FDDF99DBE5E1415A574B', 
                                    index = 58, 
                                    owner = , 
                                    collection = fdtapi.models.nft_item_collection.NftItem_collection(
                                        address = '0:E93E7D444180608B8520C00DC664383A387356FB6E16FDDF99DBE5E1415A574B', 
                                        name = 'TON Diamonds', 
                                        description = 'Best collection in TON network', ), 
                                    verified = True, 
                                    metadata = {}, 
                                    sale = fdtapi.models.sale.Sale(
                                        address = '0:10C1073837B93FDAAD594284CE8B8EFF7B9CF25427440EB2FC682762E1471365', 
                                        market = , 
                                        price = fdtapi.models.price.Price(
                                            value = '123000000000', 
                                            token_name = 'TON', ), ), 
                                    previews = [
                                        fdtapi.models.image_preview.ImagePreview(
                                            resolution = '100x100', 
                                            url = 'https://site.com/pic1.jpg', )
                                        ], 
                                    dns = 'crypto.ton', 
                                    approved_by = [
                                        'getgems'
                                        ], ), 
                                bidder = , 
                                auction = , ), 
                            nft_purchase = fdtapi.models.nft_purchase_action.NftPurchaseAction(
                                auction_type = 'DNS.tg', 
                                amount = , 
                                nft = fdtapi.models.nft_item.NftItem(
                                    address = '0:E93E7D444180608B8520C00DC664383A387356FB6E16FDDF99DBE5E1415A574B', 
                                    index = 58, 
                                    verified = True, 
                                    metadata = {}, 
                                    dns = 'crypto.ton', 
                                    approved_by = [
                                        'getgems'
                                        ], ), 
                                seller = , 
                                buyer = , ), 
                            deposit_stake = fdtapi.models.deposit_stake_action.DepositStakeAction(
                                amount = 1660050553, 
                                staker = , ), 
                            recover_stake = fdtapi.models.recover_stake_action.RecoverStakeAction(
                                amount = 1660050553, 
                                staker = , ), 
                            jetton_swap = fdtapi.models.jetton_swap_action.JettonSwapAction(
                                dex = 'stonfi', 
                                amount_in = '1660050553', 
                                amount_out = '1660050553', 
                                user_wallet = , 
                                router = , 
                                jetton_wallet_in = '0:dea8f638b789172ce36d10a20318125e52c649aa84893cd77858224fe2b9b0ee', 
                                jetton_master_in = fdtapi.models.jetton_preview.JettonPreview(
                                    address = '0:0BB5A9F69043EEBDDA5AD2E946EB953242BD8F603FE795D90698CEEC6BFC60A0', 
                                    name = 'Wrapped TON', 
                                    symbol = 'WTON', 
                                    decimals = 9, 
                                    image = 'https://cache.tonapi.io/images/jetton.jpg', 
                                    verification = 'whitelist', ), 
                                jetton_wallet_out = '0:dea8f638b789172ce36d10a20318125e52c649aa84893cd77858224fe2b9b0ee', 
                                jetton_master_out = , ), 
                            smart_contract_exec = fdtapi.models.smart_contract_action.SmartContractAction(
                                executor = , 
                                contract = , 
                                ton_attached = 123456789, 
                                operation = 'NftTransfer or 0x35d95a12', 
                                payload = '', ), 
                            simple_preview = fdtapi.models.action_simple_preview.ActionSimplePreview(
                                name = 'Ton Transfer', 
                                description = 'Transferring 5 Ton', 
                                action_image = '', 
                                value = '5 Ton', 
                                value_image = '', 
                                accounts = [
                                    
                                    ], ), )
                        ], 
                    is_scam = False, 
                    lt = 25713146000001, 
                    in_progress = False, 
                    extra = 3, ),
        )
        """

    def testMessageConsequences(self):
        """Test MessageConsequences"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
