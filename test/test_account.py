# coding: utf-8

"""
    REST api to TON blockchain explorer

    Provide access to indexed TON blockchain  # noqa: E501

    The version of the OpenAPI document: 2.0.0
    Contact: support@tonkeeper.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import fdtapi
from fdtapi.models.account import Account  # noqa: E501
from fdtapi.rest import ApiException

class TestAccount(unittest.TestCase):
    """Account unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Account
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Account`
        
        # model = fdtapi.models.account.Account()  # noqa: E501
        if include_optional :
            return Account(
                address = '0:da6b1b6663a0e4d18cc8574ccd9db5296e367dd9324706f3bbd9eb1cd2caf0bf', 
                balance = 123456789, 
                last_activity = 123456789, 
                status = 'active', 
                interfaces = [
                    'nft_sale'
                    ], 
                name = 'Ton foundation', 
                is_scam = True, 
                icon = 'https://ton.org/logo.png', 
                memo_required = True, 
                get_methods = ["get_item_data"]
            )
        else :
            return Account(
                address = '0:da6b1b6663a0e4d18cc8574ccd9db5296e367dd9324706f3bbd9eb1cd2caf0bf',
                balance = 123456789,
                last_activity = 123456789,
                status = 'active',
                get_methods = ["get_item_data"],
        )
        

    def testAccount(self):
        """Test Account"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
