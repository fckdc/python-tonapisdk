# coding: utf-8

"""
    REST api to TON blockchain explorer

    Provide access to indexed TON blockchain  # noqa: E501

    The version of the OpenAPI document: 2.0.0
    Contact: support@tonkeeper.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import fdtapi
from fdtapi.models.blockchain_raw_account import BlockchainRawAccount  # noqa: E501
from fdtapi.rest import ApiException

class TestBlockchainRawAccount(unittest.TestCase):
    """BlockchainRawAccount unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test BlockchainRawAccount
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BlockchainRawAccount`
        """
        model = fdtapi.models.blockchain_raw_account.BlockchainRawAccount()  # noqa: E501
        if include_optional :
            return BlockchainRawAccount(
                address = '0:da6b1b6663a0e4d18cc8574ccd9db5296e367dd9324706f3bbd9eb1cd2caf0bf', 
                balance = 123456789, 
                extra_balance = {
                    'key' : ''
                    }, 
                code = 'b5ee9c72410104010087000114ff00f4a413f4a0f2c80b0102012002030002d200dfa5ffff76a268698fe9ffe8e42c5267858f90e785ffe4f6aa6467c444ffb365ffc10802faf0807d014035e7a064b87d804077e7857fc10803dfd2407d014035e7a064b86467cd8903a32b9ba4410803ade68afd014035e7a045ea432b6363796103bb7b9363210c678b64b87d807d8040c249b3e4', 
                data = 'b5ee9c7241010101002600004811fd096c0000000000000000000000000000000000000000000000000000000000000000cb78264d', 
                last_transaction_lt = 123456789, 
                status = 'active', 
                storage = fdtapi.models.account_storage_info.AccountStorageInfo(
                    used_cells = 567, 
                    used_bits = 567, 
                    used_public_cells = 567, 
                    last_paid = 567, 
                    due_payment = 567, )
            )
        else :
            return BlockchainRawAccount(
                address = '0:da6b1b6663a0e4d18cc8574ccd9db5296e367dd9324706f3bbd9eb1cd2caf0bf',
                balance = 123456789,
                last_transaction_lt = 123456789,
                status = 'active',
                storage = fdtapi.models.account_storage_info.AccountStorageInfo(
                    used_cells = 567, 
                    used_bits = 567, 
                    used_public_cells = 567, 
                    last_paid = 567, 
                    due_payment = 567, ),
        )
        """

    def testBlockchainRawAccount(self):
        """Test BlockchainRawAccount"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
